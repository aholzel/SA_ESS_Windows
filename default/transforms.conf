# Lookup file for the monitored groups dashboard
[monitored_groups]
filename = monitored_groups.csv
case_sensitive_match = false

# added the CategoryStings Computer Management and Group Management to the default windows_signatures.csv
# to use the below change the lookup file used in the props.conf voor "LOOKUP-CategoryString_for_windows"
[windows_signature_extended]
filename = windows_signature_extended.csv
case_sensitive_match = false

# Lookup file with the userAccountControl status that can be found in the admon data
# This file gives a explanation about what the number means
[userAccountControl]
filename = userAccountControl.csv
case_sensitive_match = false

# Lookup file with all the NTStatus values that you find in the eventlogs.
# for example the EventCode 4625 (failed logon) has a field named "Status" and "Sub_Status" with these codes
# taken from https://msdn.microsoft.com/en-us/library/cc704588.aspx :
## By combining the NTSTATUS into a single 32-bit numbering space, the following NTSTATUS values are defined. 
## Most values also have a defined default message that can be used to map the value to a human-readable text message. 
## When this is done, the NTSTATUS value is also known as a message identifier.
## This document provides the common usage details of the NTSTATUS values; individual protocol specifications may provide expanded or modified definitions.
## In the following descriptions, a percentage sign that is followed by one or more alphanumeric characters (for example, "%1" or "%hs") 
## indicates a variable that is replaced by text at the time the value is returned.
[windows_status_codes]
filename = windows_status_codes.csv
case_sensitive_match = false

# The default regex for the below 10 *_as_dest_nt_domain stanza is not correct for EventCodes that have more than one Account_Domain field. 
# The Target Domain is always the second field, the default regex takes in case of two fields everything and not just the last one.
[Target_Domain_as_dest_nt_domain]
SOURCE_KEY = Target_Domain
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[Primary_Domain_as_dest_nt_domain]
SOURCE_KEY = Primary_Domain
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[Group_Domain_as_dest_nt_domain]
SOURCE_KEY = Group_Domain
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[Account_Domain_as_dest_nt_domain]
SOURCE_KEY = Account_Domain
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[New_Domain_as_dest_nt_domain]
SOURCE_KEY = New_Domain
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[Domain_as_dest_nt_domain]
SOURCE_KEY = Domain
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[User_ID_as_dest_nt_domain]
SOURCE_KEY = User_ID
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[Security_ID_as_dest_nt_domain]
SOURCE_KEY = Security_ID
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[Supplied_Realm_Name_as_dest_nt_domain]
SOURCE_KEY = Supplied_Realm_Name
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[Target_Account_ID_as_dest_nt_domain]
SOURCE_KEY = Target_Account_ID
REGEX = [\-\sa-zA-Z0-9]*(?:(?:\s)(.*))|(.*)
FORMAT = dest_nt_domain::"$1"

[powershell_base64]
CLEAN_KEYS = 0
REGEX = (?i)(?:^|\s+)(?:\-e(?![xq].{0,2})(?=[encodma]+)[^\s]*)\s*(?<base64_encoded>[^\s]*)
SOURCE_KEY = process_parameters

[powershell_script_file_from_path]
SOURCE_KEY = Path
CLEAN_KEYS = 0
REGEX = (?=\w\:\\)(?<script_location>.*\\)(?!\\)(?<script_file>[^\\\/\:\*\?\"\<\>\|]+\.(?:psc1|ps1|ps|bat|vbs|vbe|vbscript|vb|ws|wsf|wsh))

[script_content_from_message]
SOURCE_KEY = Message
CLEAN_KEYS = 0
REGEX = Creating\s*Scriptblock\s*text\s*\(\d+\s*of\s*\d+\)\:\s*(?<script_content>.*)ScriptBlock\s*ID\:

[powershell_remote_script]
CLEAN_KEYS = 0
REGEX = (?i)\.downloadstring\(\'(?<remote_script>[^\']*)
SOURCE_KEY = process_parameters

[Process_Command_Line_info]
CLEAN_KEYS = 0
MV_ADD = 0
SOURCE_KEY = Process_Command_Line
FORMAT = powershell_script::$1 process_command::$2 process_command::$4 process_command::$6 process_command::$8 process_command::$9 process_parameters::$3 process_parameters::$5 process_parameters::$7
REGEX = ^(.*)\|(?=(?i)\s*powershell)([^\s]+)\s*(.*)|^\"([^\"]*)\"\s(.*)|^(?!\")([^\s]*)\s(.*)|^\"(.*)\"|^(.*)

[Process_Command_Line_info_NL]
CLEAN_KEYS = 0
FORMAT = powershell_script::$1 process_command::$2 process_command::$4 process_command::$6 process_command::$8 process_command::$9 process_parameters::$3 process_parameters::$5 process_parameters::$7
REGEX = ^(.*)\|(?=(?i)\s*powershell)([^\s]+)\s*(.*)|^\"([^\"]*)\"\s(.*)|^(?!\")([^\s]*)\s(.*)|^\"(.*)\"|^(.*)
SOURCE_KEY = Opdrachtregel_proces
MV_ADD = 0

[Process_path_exe]
CLEAN_KEYS = 0
REGEX = (?<process_path>.*\\)(?!\\)(?<process_exe>.*)
SOURCE_KEY = New_Process_Name
MV_ADD = 0

[Process_path_exe_NL]
CLEAN_KEYS = 0
REGEX = (?<process_path>.*\\)(?!\\)(?<process_exe>.*)
SOURCE_KEY = Naam_van_nieuw_proces
MV_ADD = 0

[script_info_from_process_parameters]
CLEAN_KEYS = 0
REGEX = (?:(?=\w\:\\|\.\\|\.\/|\\|\/)(?<script_location>.*(?:\\|\/))|(?:\-file\s+|\-fil\s+|\-fi\s+|\-f\s+))(?!\\|\/)(?<script_file>[^\\\/\:\*\?\"\<\>\|]+\.(?:psc1|ps1|ps|bat|vbs|vbe|vbscript|vb|ws|wsf|wsh))
SOURCE_KEY = process_parameters

[object_name_to_path_and_file]
CLEAN_KEYS = 0
SOURCE_KEY = Object_Name
REGEX = (?<object_path>.*?)(?:(?<object_file>[^\\\/\:\*\?\"\<\>\|]+\.[^\\\/\:\*\?\"\<\>\|]+)$|(?<object_file_hidden>\.[^\\\/\:\*\?\"\<\>\|]+)$|$)

# For some reason there isn't always a "-" in an empty field, and in those cases the value of that field is filled with the name of the next field
# Example: dest_nt_domain = "Failure Information:" (EventCode 4625)
# to prevent that the wel-col-kv regex (splunk/etc/system/default/transforms.conf)  needs to be changed
[wel-col-kv]
REGEX = (?=\w)([^:\n\r]+):[ \t]*(?![\n\t])([^\n\t]*)

[signature_id_from_signature_long]
CLEAN_KEYS = 0
SOURCE_KEY = signature_long
REGEX = (?:.*?)(?:(?<signature_id>KB.*|[0-9\.]+)$|$)
MV_ADD = 0